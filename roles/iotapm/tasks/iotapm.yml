- name: set variables centos/redhat
  set_fact:
    systemd_dir: /usr/lib/systemd/system
    config_dir: /etc/sysconfig
    nginx_group: nginx
  when: ansible_distribution == 'CentOS'

- name: set variables debian/ubuntu
  set_fact:
    systemd_dir: /etc/systemd/system
    config_dir: /etc/default
    nginx_group: www-data
  when: ansible_distribution == 'Ubuntu'

- name: add user to run iota-pm as
  user:
    name: "{{ iotapm_username }}"
    shell: /sbin/nologin
    createhome: no
    home: /var/spool/iotapm
  tags:
    - iotapm_user

- name: get iotapm user uid
  shell: "echo -n $(id -u {{ iotapm_username }})"
  changed_when: false
  register: iotapm_uid

- name: create iotapm spool directory
  file:
    path: /var/spool/iotapm
    state: directory
    owner: "{{ iotapm_username }}"
    group: "{{ iotapm_username }}"

- name: copy basic tag file
  copy:
    content: '{}'
    dest: /var/spool/iotapm/iota-pm.conf
    mode: 0640
    group: root
    owner: "{{ iotapm_username }}"

- name: copy systemd service file
  template:
    src: templates/iota-pm.service.j2
    dest: "{{ systemd_dir }}/iota-pm.service"
  notify:
    - reload systemd

- name: flush handlers
  meta: flush_handlers

- name: copy iota-pm environment file
  template:
    src: templates/iota-pm.sysconfig.j2
    dest: "{{ config_dir }}/iota-pm"
    force: "{{ overwrite | default('no') }}"
    backup: yes
  notify:
    - restart iota-pm

- name: nginx config block
  block:

    - name: copy validation script
      copy:
        src: ../shared-files/validate_nginx_config.sh
        dest: /usr/local/bin/validate_nginx_config.sh
        mode: 0755

    - name: copy ssl.cfg nginx config
      template:
        src: ../shared-files/ssl.cfg.j2
        dest: /etc/nginx/conf.d/ssl.cfg
        validate: "/usr/local/bin/validate_nginx_config.sh -t %s -d conf.d/ssl.conf -r"
      notify:
        - reload nginx
      tags:
        - configure_nginx_ssl

    - name: copy iotapm nginx config
      template:
        src: templates/iotapm.conf.j2
        dest: /etc/nginx/conf.d/iotapm.conf
        validate: "/usr/local/bin/validate_nginx_config.sh -t %s -d conf.d/iotapm.conf -r"
      notify:
        - reload nginx

    - name: configure iotapm nginx password
      htpasswd:
        path: /etc/nginx/.htpasswd
        name: '{{ iotapm_nginx_user }}' 
        password: '{{ iotapm_nginx_password }}'
        owner: root
        group: "{{ nginx_group }}"
        mode: 0640
      no_log: true

  when:
    - install_nginx is defined
    - install_nginx|bool == True

- name: Wait max 600 seconds for IRI API port to become available. This can take a while...
  wait_for:
    timeout: 600
    port: "{{ iri_api_port }}"
  when:
    - skip_wait_iri is not defined or skip_wait_iri|bool != False

- name: ensure iota-pm started and enabled
  systemd:
    name: iota-pm.service
    state: started
    enabled: true
