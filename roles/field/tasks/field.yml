- name: set variables centos/redhat
  set_fact:
    systemd_dir: /usr/lib/systemd/system
    config_dir: /etc/sysconfig
    nodejs_bin: /usr/bin/node
    field_bin: /bin/field
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

- name: set variables debian/ubuntu
  set_fact:
    systemd_dir: /etc/systemd/system
    config_dir: /etc/default
    nodejs_bin: /usr/bin/nodejs
    field_bin: /usr/bin/field
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: add user to run field as
  user:
    name: "{{ field_username }}"
    shell: /sbin/nologin
    createhome: no
    home: "{{ field_dir }}"
  tags:
    - field_user

- name: create field home directory
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ field_username }}"
    group: "{{ field_username }}"
    mode: 0700
  with_items:
    - "{{ field_dir }}"
    - "{{ field_configdir }}"

# can override with "-e my_field_name=my-unique-name"
- name: generate my_field_name
  set_fact:
    my_field_name: "playbook_{{ ansible_fqdn | to_uuid |  truncate(8, True, '') }}"
  tags:
    - field_name

- name: copy field config
  template:
    src: "templates/field.ini.j2"
    dest: "{{ field_configdir }}/field.ini"
    owner: "{{ field_username }}"
    group: "{{ field_username }}"
    mode: 0600
    force: "{{ overwrite | default('no') }}"
    backup: yes
  notify:
    - restart field

- name: copy systemd service file
  template:
    src: templates/field.service.j2
    dest: "{{ systemd_dir }}/field.service"
  notify:
    - reload systemd

- name: flush handlers
  meta: flush_handlers

- name: ensure field started and enabled
  systemd:
    name: field.service
    state: started
    enabled: yes

- name: pause for 3 seconds to get field ID
  pause:
    seconds: 3

- name: Field ID for field_exporter
  block:

    - name: set field-exporter dirs
      set_fact:
        field_exporter_fulldir: "{{ prom_basedir }}/{{ field_exporter_basedir }}"

    - name: check field ID file
      stat:
        path: "{{ field_dir }}/.deviota-field.id"
      register: field_id_file

    - name: get field ID from file
      shell: "cat {{ field_dir }}/.deviota-field.id | head -c${1:-16}"
      register: field_id_read
      changed_when: false

    - name: set fact field ID
      set_fact:
        field_public_id: "{{ field_id_read.stdout }}"

    - name: update field-exporter config
      template:
        src: ../shared-files/field-exporter.config.js.j2
        dest: "{{ field_exporter_fulldir }}/config.js"
        owner: "{{ prom_username }}"
        group: "{{ prom_username }}"
        backup: yes
      notify:
        - restart field-exporter

  tags:
    - field_exporter
